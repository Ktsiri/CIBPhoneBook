{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/counter/counter.component.ts","./src/app/counter/counter.component.html","./src/app/fetch-data/fetch-data.component.ts","./src/app/fetch-data/fetch-data.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</body>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    CounterComponent,\n    FetchDataComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, pathMatch: 'full' },\n      { path: 'counter', component: CounterComponent },\n      { path: 'fetch-data', component: FetchDataComponent },\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-counter-component',\n  templateUrl: './counter.component.html'\n})\nexport class CounterComponent {\n  public currentCount = 0;\n\n  public incrementCounter() {\n    this.currentCount++;\n  }\n}\n","<h1>Counter</h1>\n\n<p>This is a simple example of an Angular component.</p>\n\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\n\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n})\nexport class FetchDataComponent {\n  public forecasts: WeatherForecast[];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\n\ninterface WeatherForecast {\n  date: string;\n  temperatureC: number;\n  temperatureF: number;\n  summary: string;\n}\n","<h1 id=\"tableLabel\">Weather forecast</h1>\n\n<p>This component demonstrates fetching data from the server.</p>\n\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\n\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\n  <thead>\n    <tr>\n      <th>Date</th>\n      <th>Temp. (C)</th>\n      <th>Temp. (F)</th>\n      <th>Summary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let forecast of forecasts\">\n      <td>{{ forecast.date }}</td>\n      <td>{{ forecast.temperatureC }}</td>\n      <td>{{ forecast.temperatureF }}</td>\n      <td>{{ forecast.summary }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","<h1>Hello, world!</h1>\n<p>Welcome to your new single-page application, built with:</p>\n<ul>\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\n</ul>\n<p>To help you get started, we've also set up:</p>\n<ul>\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\n</ul>\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","<header>\n  <nav\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n  >\n    <div class=\"container\">\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">CIBPhonebook</a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\".navbar-collapse\"\n        aria-label=\"Toggle navigation\"\n        [attr.aria-expanded]=\"isExpanded\"\n        (click)=\"toggle()\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n        [ngClass]=\"{ show: isExpanded }\"\n      >\n        <ul class=\"navbar-nav flex-grow\">\n          <li\n            class=\"nav-item\"\n            [routerLinkActive]=\"['link-active']\"\n            [routerLinkActiveOptions]=\"{ exact: true }\"\n          >\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\n          </li>\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/counter']\"\n              >Counter</a\n            >\n          </li>\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/fetch-data']\"\n              >Fetch data</a\n            >\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n//export { renderModule, renderModuleFactory } from '@angular/platform-server';"],"sourceRoot":"webpack:///"}