{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/counter/counter.component.html","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","AppModule","withServerTransition","appId","forRoot","path","component","pathMatch","declarations","imports","providers","bootstrap","CounterComponent","currentCount","incrementCounter","FetchDataComponent","http","baseUrl","get","subscribe","result","forecasts","error","console","HomeComponent","NavMenuComponent","isExpanded","toggle","styleUrls","environment","production","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<body>\n  <app-nav-menu></app-nav-menu>\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</body>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    HomeComponent,\n    CounterComponent,\n    FetchDataComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent, pathMatch: 'full' },\n      { path: 'counter', component: CounterComponent },\n      { path: 'fetch-data', component: FetchDataComponent },\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-counter-component',\n  templateUrl: './counter.component.html'\n})\nexport class CounterComponent {\n  public currentCount = 0;\n\n  public incrementCounter() {\n    this.currentCount++;\n  }\n}\n","<h1>Counter</h1>\n\n<p>This is a simple example of an Angular component.</p>\n\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\n\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n})\nexport class FetchDataComponent {\n  public forecasts: WeatherForecast[];\n\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\n\ninterface WeatherForecast {\n  date: string;\n  temperatureC: number;\n  temperatureF: number;\n  summary: string;\n}\n","<h1 id=\"tableLabel\">Weather forecast</h1>\n\n<p>This component demonstrates fetching data from the server.</p>\n\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\n\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\n  <thead>\n    <tr>\n      <th>Date</th>\n      <th>Temp. (C)</th>\n      <th>Temp. (F)</th>\n      <th>Summary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let forecast of forecasts\">\n      <td>{{ forecast.date }}</td>\n      <td>{{ forecast.temperatureC }}</td>\n      <td>{{ forecast.temperatureF }}</td>\n      <td>{{ forecast.summary }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n}\n","<h1>Hello, world!</h1>\n<p>Welcome to your new single-page application, built with:</p>\n<ul>\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\n</ul>\n<p>To help you get started, we've also set up:</p>\n<ul>\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\n</ul>\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","<header>\n  <nav\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\n  >\n    <div class=\"container\">\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">CIBPhonebook</a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\".navbar-collapse\"\n        aria-label=\"Toggle navigation\"\n        [attr.aria-expanded]=\"isExpanded\"\n        (click)=\"toggle()\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\n        [ngClass]=\"{ show: isExpanded }\"\n      >\n        <ul class=\"navbar-nav flex-grow\">\n          <li\n            class=\"nav-item\"\n            [routerLinkActive]=\"['link-active']\"\n            [routerLinkActiveOptions]=\"{ exact: true }\"\n          >\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\n          </li>\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/counter']\"\n              >Counter</a\n            >\n          </li>\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/fetch-data']\"\n              >Fetch data</a\n            >\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n//export { renderModule, renderModuleFactory } from '@angular/platform-server';"]}